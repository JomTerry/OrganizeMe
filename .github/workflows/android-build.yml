name: Build OrganizeMe APK / AAB

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: false
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache pip, buildozer, gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.buildozer
            ~/.gradle
          key: ${{ runner.os }}-build-${{ hashFiles('buildozer.spec', 'OrganizeMe/**', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            git zip unzip openjdk-17-jdk build-essential autoconf automake \
            libtool pkg-config zlib1g-dev python3-pip python3-venv \
            libssl-dev libsqlite3-dev libffi-dev

      - name: Install Python build tools
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install --upgrade cython==0.29.33
          python3 -m pip install --upgrade buildozer==1.5.0

      - name: Debug repo listing
        run: |
          echo "Repo root listing:"
          ls -la
          echo "OrganizeMe folder listing:"
          ls -la OrganizeMe || true
          echo "buildozer.spec:"
          sed -n '1,120p' buildozer.spec || true

      - name: Prepare keystore (release only)
        if: ${{ github.event.inputs.build_type == 'release' }}
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          if [ -z "$KEYSTORE_BASE64" ]; then
            echo "ERROR: KEYSTORE_BASE64 secret is empty. Add your keystore as Base64 to Secrets." >&2
            exit 1
          fi
          echo "$KEYSTORE_BASE64" | base64 --decode > organizeme.keystore
          ls -la organizeme.keystore

      - name: Run buildozer (debug or release)
        env:
          BUILD_TYPE: ${{ github.event.inputs.build_type }}
        run: |
          set -e
          # ensure buildozer uses the repo root buildozer.spec (default)
          if [ "$BUILD_TYPE" = "release" ]; then
            echo "Running release build..."
            # buildozer will produce an unsigned release apk/aab for signing
            buildozer -v android release
          else
            echo "Running debug build..."
            buildozer -v android debug
          fi

      - name: Sign & align (release only)
        if: ${{ github.event.inputs.build_type == 'release' }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          # find unsigned release apk produced by buildozer
          UNSIGNED=$(ls bin/*-release-unsigned.apk | head -n 1 || true)
          # prefer aab if produced
          AAB=$(ls bin/*.aab | head -n 1 || true)
          if [ -n "$AAB" ]; then
            echo "Found AAB: $AAB (Play Console accepts AAB; you can upload directly)"
            ls -la "$AAB"
          elif [ -n "$UNSIGNED" ]; then
            echo "Unsigned APK: $UNSIGNED"
            jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
              -keystore organizeme.keystore -storepass "$KEYSTORE_PASSWORD" \
              -keypass "$KEY_PASSWORD" "$UNSIGNED" "$KEY_ALIAS"
            ALIGNED="bin/OrganizeMe-release.apk"
            zipalign -v 4 "$UNSIGNED" "$ALIGNED"
            ls -la "$ALIGNED"
          else
            echo "No release artifacts found in bin/ â€” listing bin/"
            ls -la bin || true
            exit 1
          fi

      - name: Upload APK / AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: OrganizeMe-APK-AAB
          path: |
            bin/*.apk
            bin/*.aab
            bin/*-debug.apk